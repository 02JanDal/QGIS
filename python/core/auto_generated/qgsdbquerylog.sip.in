/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/qgsdbquerylog.h                                             *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/



class QgsDatabaseQueryLogEntry
{
%Docstring(signature="appended")
Encapsulates a logged database query.

.. versionadded:: 3.24
%End

%TypeHeaderCode
#include "qgsdbquerylog.h"
%End
  public:

    QgsDatabaseQueryLogEntry( const QString &query = QString() );
%Docstring
Constructor for QgsDatabaseQueryLogEntry.
%End

    QString query;

    QString initiatorClass;

    QString origin;
};



class QgsDatabaseQueryLog: QObject
{
%Docstring(signature="appended")
Handles logging of database queries.

:py:class:`QgsDatabaseQueryLog` is not usually directly created, but rather accessed through
:py:func:`QgsApplication.databaseQueryLog()`. Generally, clients should only access the
static :py:func:`~QgsDatabaseQueryLogEntry.log` method to register their queries.

Example
-------

.. code-block:: python

       # Log a database query
       QgsDatabaseQueryLogger.log('SELECT * FROM my_table')

.. versionadded:: 3.24
%End

%TypeHeaderCode
#include "qgsdbquerylog.h"
%End
  public:

    QgsDatabaseQueryLog( QObject *parent = 0 );
%Docstring
Creates a new query logger.

:py:class:`QgsDatabaseQueryLogger` is not usually directly created, but rather accessed through
:py:func:`QgsApplication.queryLogger()`.
%End

    static void log( const QString &query );
%Docstring
Logs a database query.

Consider using the variant with a :py:class:`QgsDatabaseQueryLogEntry` argument instead, as that
method allows more context for logged queries.

This method can be safely called from any thread.
%End

    static void log( const QgsDatabaseQueryLogEntry &entry );
%Docstring
Logs a database query ``entry``.

This method can be safely called from any thread.
%End

  public slots:


  signals:


};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/qgsdbquerylog.h                                             *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
