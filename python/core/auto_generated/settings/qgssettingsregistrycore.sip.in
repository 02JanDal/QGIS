/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/settings/qgssettingsregistrycore.h                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/







class QgsSettingsRegistryCore
{
%Docstring(signature="appended")
:py:class:`QgsSettingsRegistryCore` is used for settings introspection and collects all
:py:class:`QgsSettingsEntry` instances of core.

.. versionadded:: 3.20
%End

%TypeHeaderCode
#include "qgssettingsregistrycore.h"
%End
  public:

    QgsSettingsRegistryCore();
%Docstring
Constructor for QgsSettingsRegistryCore.
%End

    virtual ~QgsSettingsRegistryCore();

<<<<<<< HEAD
    const QgsSettingsEntryBase *getSettingsEntry( const QString &key );
%Docstring
Returns the :py:class:`QgsSettingsEntry` with the given ``key`` or None if not found.
%End

    void addSettingsEntry( const QgsSettingsEntryBase *settingsEntry );
%Docstring
Add ``settingsEntry`` to the register.
%End
=======
    const QgsSettingsEntryInteger settingsDigitizingStreamTolerance;

    const QgsSettingsEntryInteger settingsDigitizingLineWidth;

    const QgsSettingsEntryInteger settingsDigitizingLineColorRed;

    const QgsSettingsEntryInteger settingsDigitizingLineColorGreen;

    const QgsSettingsEntryInteger settingsDigitizingLineColorBlue;

    const QgsSettingsEntryInteger settingsDigitizingLineColorAlpha;

    const QgsSettingsEntryDouble settingsDigitizingLineColorAlphaScale;

    const QgsSettingsEntryInteger settingsDigitizingFillColorRed;

    const QgsSettingsEntryInteger settingsDigitizingFillColorGreen;

    const QgsSettingsEntryInteger settingsDigitizingFillColorBlue;

    const QgsSettingsEntryInteger settingsDigitizingFillColorAlpha;

    const QgsSettingsEntryBool settingsDigitizingLineGhost;

    const QgsSettingsEntryDouble settingsDigitizingDefaultZValue;

    const QgsSettingsEntryBool settingsDigitizingDefaultSnapEnabled;

class QgsSettingsEntryEnumFlag_settingsDigitizingDefaultSnapType
{
%TypeHeaderCode
#include "qgssettingsregistrycore.h"
#include "qgssettingsentry.h"
typedef QgsSettingsEntryEnumFlag<QgsSnappingConfig::SnappingTypes> QgsSettingsEntryEnumFlag_settingsDigitizingDefaultSnapType;
%End
  public:
    QgsSettingsEntryEnumFlag_settingsDigitizingDefaultSnapType( const QString &key, QgsSettings::Section section, const QgsSnappingConfig::SnappingTypes &defaultValue, const QString &description = QString() );
    QString key( const QString &dynamicKeyPart = QString() ) const;
    QgsSnappingConfig::SnappingTypes value( const QString &dynamicKeyPart = QString(), bool useDefaultValueOverride = false, const QgsSnappingConfig::SnappingTypes &defaultValueOverride = QgsSnappingConfig::SnappingTypes() ) const;
};
    const QgsSettingsEntryEnumFlag_settingsDigitizingDefaultSnapType settingsDigitizingDefaultSnapType;

    const QgsSettingsEntryDouble settingsDigitizingDefaultSnappingTolerance;


    const QgsSettingsEntryDouble settingsDigitizingSearchRadiusVertexEdit;


    const QgsSettingsEntryColor settingsDigitizingSnapColor;

    const QgsSettingsEntryBool settingsDigitizingSnapTooltip;

    const QgsSettingsEntryBool settingsDigitizingSnapInvisibleFeature;

    const QgsSettingsEntryBool settingsDigitizingMarkerOnlyForSelected;

    const QgsSettingsEntryString settingsDigitizingMarkerStyle;

    const QgsSettingsEntryDouble settingsDigitizingMarkerSizeMm;

    const QgsSettingsEntryBool settingsDigitizingReuseLastValues;

    const QgsSettingsEntryBool settingsDigitizingDisableEnterAttributeValuesDialog;

    const QgsSettingsEntryInteger settingsDigitizingValidateGeometries;


    const QgsSettingsEntryInteger settingsDigitizingOffsetQuadSeg;

    const QgsSettingsEntryDouble settingsDigitizingOffsetMiterLimit;

    const QgsSettingsEntryBool settingsDigitizingConvertToCurve;

    const QgsSettingsEntryDouble settingsDigitizingConvertToCurveAngleTolerance;

    const QgsSettingsEntryDouble settingsDigitizingConvertToCurveDistanceTolerance;


    const QgsSettingsEntryBool settingsDigitizingOffsetShowAdvanced;

    const QgsSettingsEntryInteger settingsDigitizingTracingMaxFeatureCount;
>>>>>>> 27bb50bc4d (Enum flag sip)

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/settings/qgssettingsregistrycore.h                          *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
